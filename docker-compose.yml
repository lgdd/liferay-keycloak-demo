version: "3"

volumes:
  liferay_data:
  smtp_data:
  postgres_data:

services:
  liferay:
    build:
      dockerfile: liferay/Dockerfile
      context: .
      args:
        - BASE_IMAGE=liferay/portal:7.4.3.81-ga81
    ports:
      - "8080:8080"
    env_file:
      - ./liferay/variables.env
    volumes:
      - liferay_data:/opt/liferay/data
      - ./liferay/files:/mnt/liferay/files
    depends_on:
      - postgres
      - sso
    entrypoint: /usr/local/bin/wait-for -t 60 postgres:5432 -- /usr/local/bin/liferay_entrypoint.sh

  postgres:
    image: postgres:13-alpine
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_DB: liferay
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5452:5432"
  #    command: [ "postgres", "-c", "log_statement=all" ]

  mail:
    image: rnwood/smtp4dev:v3
    ports:
      - "5000:80"
    volumes:
      - smtp_data:/smtp4dev
  sso:
    build:
      context: ./keycloak
      args:
        - BASE_IMAGE=quay.io/keycloak/keycloak:21.1.1
#    image: quay.io/keycloak/keycloak
    ports:
      - "8543:8543"
    env_file:
      - keycloak/variables.env
    volumes:
      - ./keycloak/liferay-realm.json:/opt/keycloak/data/import/liferay-realm.json
    depends_on:
      - postgres
    command: start --optimized --import-realm
#    command:
#      - start-dev
#      - --hostname-url=http://sso:8080/
#      - --import-realm
